 hi all i have a question which is a bit tricky and was wondering of anyone has come across this problem before or could point me in the right direction i am involved in porting a sco unix application to linux and we have encountered a problem with the way semaphores are being handled the application uses mulitple processes to run application code with the main process known as the bsh which controls all i o be it screen or file i o syncronisation is handled via semaphores in certain circumstances the main process and the application child process seem to lock up both waiting for the syncronisation semaphores to change state i have attached ddd to the processes and it seems that the semaphore code is doing the correct things for syncronisation but the processes stay stuck in the semop system call i have also noticed that if i introduce a slight delay between changing semaphore states the problem goes away but this causes our entire application to run really sloooww lol is there anything weird or different with the standard implemenation of semaphores on modern linux that could cause a semop to fail to pick up the change in state in a semaphore immediately setting sem flg ipc nowait and checking for errno eagain and recalling semop if the semop call fails also fixes the problem but again system performance goes down the toilet both the parent controlling process run as the same uid and the parent creates the semaphores with permissions any pointers would be appreciated rgds colin nevin do you yahoo everything you ll ever need on one web page from news and sport to email and music charts http uk my yahoo com irish linux users group ilug linux ie http www linux ie mailman listinfo ilug for un subscription information list maintainer listmaster linux ie 