 barry a warsaw gives answers and asks questions here s the code that produced the header tokens x n for x in msg keys x n x x n get x for x in x n items yield header s d x some responses header x mailman version header list id header x beenthere these three are definitely mm artifacts although the second one could be inserted by other list management software it s described in an rfc since all the ham came from mailman and only spam had it it s quite safe to assume then that i should ignore these for now header newsgroups header xref header path these aren t mm artifacts but are byproducts of gating a message off of an nntp feed some of the other nntp headers are similar but i won t point them out below i should ignore these too then header list unsubscribe header list subscribe header list post header list help header list archive rfc recommended generic listserve headers that mm injects ditto so why do you get two entries for this one header received header received read the code the first line counts msgs that had instances of a received header and the second counts msgs that had instances i expect this is a good clue the more indirect the mail path the more of those thingies we ll see and if you re posting from a spam trailer park in tasmania you may well need to travel thru more machines note that header names are case insensitive so this one s no different than mime version similarly other headers in your list ignoring case here may or may not help that s for experiment to decide it s plausible that case is significant if e g a particular spam mailing package generates unusual case or a particular clueless spammer misconfigures his package header precedence could be mailman or not this header is supposed to tell other automated software that this message was automated e g a replybot should ignore any message with a precedence bulk junk list rule of thumb if mailman inserts a thing i should ignore it or better i should stop trying to out think the flaws in the test data and get better test data instead header header heh i sucked out all the wordinfo keys that began with header the last line there was probably due to unrelated instances of the string header in message bodies harder to guess about the first line some headers of course are totally unreliable as to their origin i m thinking stuff like mime version content type to from etc etc everyone sticks those in the brilliance of anthony s just count them scheme is that it requires no thought so can t be fooled header lines that are evenly distributed across spam and ham will turn out to be worthless indicators prob near so do no harm 